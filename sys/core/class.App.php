<?php

class App
 {

    // Also remember of imagening of
    // inherited Config vars "kind of" HERE --> -->
    //protected $db;
    protected $aliasFromUrl;
    protected $requestedDataArr;
    protected $aliasMainDetected = false;
    protected $aliasExists;
    protected $visitorId;

    function __construct()
    {
       // set general settings:

       // 1. SET TIME ZONE WE GONNA WORK WITH
       Config::setMyTimeZone();


       // 2. SET UP CONSTANTS EVIRONMENT
       // NOW WE SKIP THIS STEP BECAUSE WE'VE DONE IT BEFORE IN 'LOAD CLASS' FUNC
       //Config::setConstants(Config::$config[sysFolders_RelPaths]); // PATHS ARE IN CONFIG CLASS


       // 3. SET CONNECTION TO DATA BASE
       if (Config::$db == '')
       {
           Config::$db = $this->getDBConnection(

                    Config::$dataBase[server],
                    Config::$dataBase[user],
                    Config::$dataBase[passw],
                    Config::$dataBase[name],
                    Config::$dataBase[charset]

                    );
       }


       // 4. GET ALIAS FROM REQUESTED URL
       $this->aliasFromUrl = $this->separateAliasFromUrl();


       // 5. GET ALL DATA FROM DATA BASE RELATED TO THE ALIAS
       $this->requestedDataArr = $this->getRequestedLineFromDb($this->aliasFromUrl);


       // check ... if we have got something in alias


       // 6. REDIRECT TO 404 PAGE IF WE GOT NOTHING RELATED TO REQUESTED ALIAS
       if ($this->requestedDataArr[alias] == '')
       {
            // eliminate some virtual aliases from redirection
//exit($this->aliasFromUrl);
               switch($this->aliasFromUrl)
                {
                    case '': break;
                    case 'index.php': break;
                    case 'search': break;
                    case substr(Config::$path[admin],1,100): break;
                    case substr(Config::$path[admin],1,100)."/index.php": break;
                    //default: $this->redirectTo404();
                }

       }


       // 7. SET USER'S COOKIE
       if ($this->visitorId == '')
       { $this->visitorId = $this->setCo_kie(); }


    } // constructor END

    // ========================

    public static function getAliasFromUrl()
     { return $this->aliasFromUrl; } // FUNC END


    public function getVisitorId()
     { return $this->visitorId; } // FUNC END

    // ========================

    // getRequestedLineFromDb, getInfoFromDb_ForRequestedAlias
    private function getRequestedLineFromDb($alias)
    {
        $getRequestedLine = mysql_query("SELECT
                                        id,parent,is_category,alias,name,author,
                                        descr,content,visitors_ids,hits,publish_expired,created,params
                                        FROM data
                                        WHERE `alias` = '".$alias."' and `published`='1' and
                                        '".date('Y-m-d H:i')."' BETWEEN `publish_start` AND `publish_expired`"
                                        ,Config::$db);

         return mysql_fetch_array($getRequestedLine);

    } // FUNC END


    // ========================

    private function redirectTo404()
     {
            header('HTTP/1.0 404 Not Found');
            header("Location: ".SITE_ROOT_URL."/404.php");
            exit();
     } // FUNC END

    // ========================

/**
 *
 * GET POST/CATEGORY ALIAS FROM URL
 * SITE_FOLDER constant has to be already defined
 * @return string (unslashed)
 *
 */
    private function separateAliasFromUrl()
     {
        // remove site folder instead of server_name from request url
        // (because site could be located in subdirectory)

        $result = ($_SERVER['REQUEST_URI'] == SITE_FOLDER) ? '' : str_replace  (SITE_FOLDER, "", $_SERVER['REQUEST_URI']);

        // separate alias part from parametrs one
        $result = explode("?",$result);
        $alias = $result[0];

        // re-write '$alias' without the first and last slashes

        // we check for slash in the beginning '$alias{0}', because there are two possible situations:
        // site location is in root directory (most common sit) or in sub-directory (you sometimes need that)
        // in the last one '$alias' goes with the slash '/' in the beginning,
        // so we remove this one as well inside of next if-else body sections

        $last = substr($alias, -1);

        if ($last != '/') { $alias = ($alias{0} != '/') ? $alias : substr($alias,1); }

        else if ($last == '/') { $alias = ($alias{0} != '/') ? substr($alias,0,-1): substr($alias,1,-1); }

        //
        return $alias;

      } // FUNC END



    // ==========================
/**
 *
 * SET USER ID IN COOKIE, GENERATED BY uniqid()
 * @return string
 *
 */
    private function setCo_kie()
    {

        // 1 година           - time()+3600
        // 2 години           - time()+7200
        //----------------
        // 1 доба             - time()+86400
        // 2 доби             - time()+172800
        //----------------
        // 1 тиждень          - time()+604800
        // 2 тижня (14 діб)   - time()+1209600
        // 1 місяць (30 діб)	- time()+2592000


        if (!isset($_COOKIE['userid']) or empty($_COOKIE['userid']))
        {
          $visitorId = uniqid();
          setcookie("userid",$visitorId,time()+7776000);
        }
        elseif(isset($_COOKIE['userid']) and !empty($_COOKIE['userid']))
        {
        $visitorId = $_COOKIE['userid'];
        }

        return $visitorId;

    } // FUNC END


    // ========================


    private function getDBConnection($dbServer="localhost",
                          $dbUser="root",
                          $dbPassw="",
                          $dbName="cms_db",
                          $dbCharset="CP1251")
    {
      // Connect with DB, and write down global $db connection id
      $db = mysql_connect ("$dbServer","$dbUser","$dbPassw");

      if (!$db) { throw new Exception('Data Base Connection Function: DB connection is failed');}

      // Set DB name we are going to deal with
      mysql_select_db("$dbName",$db);

      // Set charset
      mysql_query("SET NAMES $dbCharset",$db);

      return $db;

    }


 } // CLASS END